---
title: "lab6"
format: 
    md:
        output-file: README.md
editor: visual
---

# Информационно-аналитические технологии поиска угроз информационной безопасности 

## Лабораторная работа №6

## Цель работы
1. Закрепить навыки исследования данных журнала Windows Active Directory
2. Изучить структуру журнала системы Windows Active Directory
3. Зекрепить практические навыки использования языка программирования R для обработки данных
4. Закрепить знания основных функций обработки данных экосистемы tidyverse языка R

## Исходные данные

1.ОС Windows 10
2.WSL2 
3.Ноутбук

## План

На протяжении долгого времени системные администраторы Доброй Организации
замечали подозрительную активность в домене Windows, но конкретных
доказательств компрометации сети найти не удавалось. К Вам в руки попал файл с
выгрузкой данных из системы SIEM. Помогите выявить факты компрометации.

## Ход работы
1.Импортируйте данные в R

```{r}
library(dplyr)
library(jsonlite)
library(tidyr)
library(xml2)
library(rvest)
```

```{r}
download.file("https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz", destfile = file <- tempfile(fileext = ".tar.gz"), mode = "wb")

temp <- tempdir()
untar(file, exdir = temp)

json <- list.files(temp, pattern="\\.json$", full.names = TRUE, recursive = TRUE)
info_json <- stream_in(file(json))
```

```{r}
webpage_url <- "https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/plan/appendix-l--events-to-monitor"
webpage <- xml2::read_html(webpage_url)
event_df <- rvest::html_table(webpage)[[1]]
event_df
```

2.Привести датасеты в вид “аккуратных данных”, преобразовать типы столбцов в соответствии с типом данных.

```{r}
info_json <- info_json %>% mutate('@timestamp'= as.POSIXct(`@timestamp`, format = "%Y-%m-%dT%H:%M:%OSZ", tz = "UTC"))
info_json %>% select(`@timestamp`) %>% slice(1:10)
```

3.Просмотрите общую структуру данных с помощью функции glimpse().

```{r}
glimpse(info_json)
```

### Анализ
1. Раскройте датафрейм избавившись от вложенных датафреймов.

```{r}
info_json_vl <- info_json %>%  
  tidyr::unnest(c('@metadata', event, log, winlog, ecs, host, agent), names_sep = ".") %>% 
  tidyr::unnest(c(winlog.event_data,winlog.process,winlog.user, winlog.user_data,), names_sep = ".")
glimpse(info_json_vl)
```

2.Минимизируйте количество колонок в датафрейме – уберите колоки с единственным значением параметра.

```{r}
uniquelength <- sapply(info_json_vl,function(x) length(unique(x) ))
info_clear <- subset(info_json_vl, select=uniquelength>1)
glimpse(info_clear)
```

3.Какое количество хостов представлено в данном датасете?

```{r}
info_json_vl %>% distinct(agent.hostname) %>% nrow()
```

4. Подготовьте датафрейм с расшифровкой Windows Event_ID, приведите типы
данных к типу их значений.

```{r}
df <- merge(x = info_clear, y = event_df, by.x="event.code", by.y = "Current Windows Event ID")
```

```{r}
df2 <- merge(x = info_clear, y = event_df, by.x="event.code", by.y = "Legacy Windows Event ID")
```

5. Есть ли в логе события с высоким и средним уровнем значимости? Сколько их?
Высокий - 9 событий 
Средний - 79 событий.
